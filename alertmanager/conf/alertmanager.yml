global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: 'localhost:25'
  smtp_from: 'alertmanager@example.org'
  smtp_auth_username: 'alertmanager'
  smtp_auth_password: 'password'
  # The auth token for Hipchat.
  hipchat_auth_token: '1234556789'
  # Alternative host for Hipchat.
  hipchat_api_url: 'https://hipchat.foobar.org/'
  slack_api_url: 'https://hooks.slack.com/services/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'

# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ['alertname', 'cluster', 'service']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first 
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 15m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 30m 

  # A default receiver
  receiver: jenkins
  
  routes:
  - receiver: slack
    match:
      severity: critical
      
receivers:
- name: 'slack'
  slack_configs:
  - channel: '#devops'
    username: '@channel'
    text: 'Instances: {{ range .Alerts }}{{ .Labels.instance }} {{ end }}'
    
- name: 'jenkins'
  webhook_configs:
  - send_resolved: true
    url: http://40.91.197.164:8180/generic-webhook-trigger/invoke?token=scalingservice&servicename={{ $labels.container_label_com_docker_swarm_task_name}}

